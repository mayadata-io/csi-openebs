apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: csi-openebs-sc-1
provisioner: csi-openebs
reclaimPolicy: Delete
volumeBindingMode: Immediate
parameters:
  storage-class-name: csi-openebs-sc-1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-service-account
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: csi-cluster-role
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - create
  - delete
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - storage.k8s.io
  resources:
  - volumeattachments
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
  - watch
  - create
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: csi-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: csi-cluster-role
subjects:
- kind: ServiceAccount
  name: csi-service-account
  namespace: default
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: csi-openebs-daemon
  namespace: default
spec:
  selector:
    matchLabels:
      app: openebs-node-plugin
  template:
    metadata:
      labels:
        app: openebs-node-plugin
    spec:
      serviceAccount: csi-service-account
      hostNetwork: true
      containers:
        - name: driver-registrar
          args:
          - --v=5
          - --csi-address=/csi/csi.sock
          env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: quay.io/k8scsi/driver-registrar:v0.2.0
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
        - name: openebs-driver
          args:
          - --v=5
          - --nodeid=$(KUBE_NODE_NAME)
          - --endpoint=$(CSI_ENDPOINTS)
          env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: "OPENEBS_NAMESPACE"
            value: "default"
          - name: CSI_ENDPOINTS
            value: unix:///csi/csi.sock
          image: rachitprince/csi-openebs:v1.0.0
          imagePullPolicy: Always
          securityContext:
            privileged: true
            allowPrivilegeEscalation: true
          volumeMounts:
          - mountPath: /dev
            name: dev
          - mountPath: /csi
            name: socket-dir
          - mountPath: /usr/bin/iscsiadm
            name: iscsiadm
          - mountPath: /usr/sbin/iscsid
            name: iscsid
          - mountPath: /etc/iscsi
            name: iscsi
          - mountPath: /var/lib/kubelet/pods
            mountPropagation: Bidirectional
            name: mountpoint-dir
      volumes:
      - hostPath:
          path: /etc/iscsi
          type: Directory
        name: iscsi
      - hostPath:
          path: /var/lib/kubelet/plugins/csi-openebs
          type: DirectoryOrCreate
        name: socket-dir
      - hostPath:
          path: /var/lib/kubelet/pods
          type: DirectoryOrCreate
        name: mountpoint-dir
      - hostPath:
          path: /dev
          type: Directory
        name: dev
      - hostPath:
          path: /usr/sbin/iscsid
          type: File
        name: iscsid
      - hostPath:
          path: /usr/bin/iscsiadm
          type: File
        name: iscsiadm
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: csi-openebs-statefulset
spec:
  serviceName: "openebs-controller-plugin"
  selector:
    matchLabels:
      app: openebs-controller-plugin # has to match .spec.template.metadata.labels
  replicas: 1
  template:
    metadata:
      labels:
        app: openebs-controller-plugin
    spec:
      serviceAccount: csi-service-account
      containers:
        - name: external-provisioner
          args:
          - --v=5
          - --provisioner=csi-openebs
          - --csi-address=/var/lib/csi/sockets/pluginproxy/csi.sock
          image: quay.io/k8scsi/csi-provisioner:v0.2.0
          volumeMounts:
          - mountPath: /var/lib/csi/sockets/pluginproxy
            name: socket-dir
        - name: external-attacher
          args:
          - --v=5
          - --csi-address=$(ADDRESS)
          env:
          - name: ADDRESS
            value: /var/lib/csi/sockets/pluginproxy/csi.sock
          image: quay.io/k8scsi/csi-attacher:v0.2.0
          volumeMounts:
          - mountPath: /var/lib/csi/sockets/pluginproxy/
            name: socket-dir
        - name: openebs-driver
          args:
          - --endpoint=$(CSI_ENDPOINTS)
          env:
          - name: "OPENEBS_NAMESPACE"
            value: "default"
          - name: CSI_ENDPOINTS
            value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
          image: rachitprince/csi-openebs:v1.0.0
          imagePullPolicy: Always
          securityContext:
            privileged: true
            allowPrivilegeEscalation: true
          volumeMounts:
          - mountPath: /var/lib/csi/sockets/pluginproxy
            name: socket-dir
      volumes:
        - emptyDir: {}
          name: socket-dir
---
